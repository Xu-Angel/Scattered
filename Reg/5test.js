/* 5.3. 案例分析
接下来分析两个例子，一个简单的，一个复杂的。
5.3.1 身份证
正则表达式是：
/^(\d{15}|\d{17}[\dxX])$/
因为竖杠 | 的优先级最低，所以正则分成了两部分 \d{15} 和 \d{17}[\dxX]。
\d{15} 表示 15 位连续数字。
\d{17}[\dxX] 表示 17 位连续数字，最后一位可以是数字，可以大小写字母 "x"。
可视化如下：
JavaScript 正则表达式迷你书
5. 第五章 正则表达式的拆分 | 第 50 页
5.3.2 IPV4 地址
正则表达式是：
/^((0{0,2}\d|0?\d{2}|1\d{2}|2[0-4]\d|25[0-5])\.){3}(0{0,2}\d|0?\d{2}|1\d{2}|2[0-4]\d|25[0-5])$/
这个正则，看起来非常吓人。但是熟悉优先级后，会立马得出如下的结构：
((…)\.){3}(…)
其中，两个 (…) 是一样的结构。表示匹配的是 3 位数字。因此整个结构是
3位数.3位数.3位数.3位数
然后再来分析 (…)：
(0{0,2}\d|0?\d{2}|1\d{2}|2[0-4]\d|25[0-5])
它是一个多选结构，分成5个部分：
• 0{0,2}\d，匹配一位数，包括 "0" 补齐的。比如，"9"、"09"、"009"；
• 0?\d{2}，匹配两位数，包括 "0" 补齐的，也包括一位数；
• 1\d{2}，匹配 "100" 到 "199";
• 2[0-4]\d，匹配 "200" 到 "249"；
• 25[0-5]，匹配 "250" 到 "255"。
最后来看一下其可视化形式：
 */